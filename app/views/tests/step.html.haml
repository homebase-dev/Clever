.page-header
  %h1
    =@question.question_context.category.name
    %small Test
    /%small #{@assignation_number+1}/#{@test.assignations.count}
    
.row
  .col-lg-12
    #timer-placeholder{:style => "position: absolute; right: 2em; top: 2px; font-size: 0.8em;"}
      Zeit?
    #timer{:style => "display: none;"}
    :javascript
      //TODO if needed again put into separate file
      function setCookie(cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays*24*60*60*1000));
        var expires = "expires="+d.toUTCString();
        document.cookie = cname + "=" + cvalue + "; " + expires;
      }
    
      function getCookie(cname) {
          var name = cname + "=";
          var ca = document.cookie.split(';');
          for(var i=0; i<ca.length; i++) {
              var c = ca[i];
              while (c.charAt(0)==' ') c = c.substring(1);
              if (c.indexOf(name) == 0) return c.substring(name.length, c.length);
          }
          return "";
      }
      //END TODO
      
      
      $( document ).ready(function() {
        var timer = $('#timer');
        var timer_placeholder = $('#timer-placeholder');
        
        var isTimerOn = getCookie("isTimerOn");
        if(!isTimerOn || isTimerOn === "true") {
          timer_placeholder.hide();
          timer.show();
        } else {
          timer.hide();
          timer_placeholder.show();
        }
        
        timer.timer({
          seconds: "#{@timer_elapsed_seconds}"
        })
        
        timer_placeholder.click(function (event) {
          setCookie("isTimerOn", true, 365);
          timer_placeholder.hide();
          timer.show();
        });
        
        timer.click(function (event) {
          setCookie("isTimerOn", false, 365);
          timer.hide();
          timer_placeholder.show();
        });
      });
    .progress
      .progress-bar.progress-bar{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" => "#{((@assignation_number+1)*100) / @test.assignations.count}", :role => "progressbar", :style => "width: #{((@assignation_number+1)*100) / @test.assignations.count}%"}
        %span #{@assignation_number+1}/#{@test.assignations.count}
      
    %a.btn.btn-default.btn-xs.pull-right{:href => "#", :role => "button", :id => "show_context_button", :style => "margin-bottom: 0.5em; display: none;"} Zeige Kontext

    .context-box{:id => "context_#{@question.id}"}
      -if @show_context
        :javascript
          $("#show_context_button").click(function (event) {
            var context = $("#context_#{@question.id}");
            
            if(context.is(":visible")) {
              context.hide();
              $(this).text("Zeige Kontext");
            } else {
              context.show();
              $(this).text("Verberge Kontext");
            }
            event.preventDefault(); // Prevent link from following its href
          });
        -if @did_context_change
          :javascript
            $( document ).ready(function() {
              $("#question_#{@question.id}").hide();
  
              $('.first-question').click(function (event) {
                $("#context_#{@question.id}").hide();
                $("#question_#{@question.id}").show();   
                $("#show_context_button").show();  
                event.preventDefault(); // Prevent link from following its href
              });
              
              $('.first-question-only-begin').click(function (event) {
                $("#context_#{@question.id}").hide();
                $("#question_#{@question.id}").show();   
                event.preventDefault(); // Prevent link from following its href
              });
            });
          -if @workflow.always_visible?
            .panel.panel-primary
              .panel-heading
                %h3.panel-title Kontext
              .panel-body.scale-images
                /%p ALWAYS changed -> show
                =preview_html_field(@question.question_context.content)
                %a.btn.btn-default.pull-right.first-question{:id => 'next-link', :href => "#", :role => "button"} Los gehts!
          -else
            :javascript
              $( document ).ready(function() {
                console.log("timer startet: #{@question.question_context.display_time_milliseconds}" );
                setTimeout(function(){ $('.first-question-only-begin').click(); console.log("lets go!"); }, "#{@question.question_context.display_time_milliseconds}");
              
                $("#getting-started").countdown("#{@question.question_context.countdown_date_in_milliseconds}", function(event) {
                  $(this).text(
                    event.strftime('Bearbeitungszeit: %H:%M:%S')
                  );
                });
              });
            .panel.panel-primary
              .panel-heading
                %h3.panel-title Kontext
                .question_countdown
                  #getting-started
              .panel-body.scale-images
                /%p ONLY AT BEGINNING changed -> show with counter
                =preview_html_field(@question.question_context.content)
                %a.btn.btn-default.pull-right.first-question-only-begin{:id => 'next-link', :href => "#", :role => "button"} Los gehts!
        -else
          :javascript
            $( document ).ready(function() {
              $("#context_#{@question.id}").hide();
            });
          -if @workflow.always_visible?
            :javascript
              $( document ).ready(function() {
                $("#show_context_button").show();            
              });
            .panel.panel-primary
              .panel-heading
                %h3.panel-title Kontext
              .panel-body.scale-images
                %p ALWAYS not changed -> MINIMIZED
                =preview_html_field(@question.question_context.content)
          -else
            .panel-heading
              %h3.panel-title Kontext
            .panel.panel-primary
              .panel-body.scale-images
                %p ONLY AT BEGINNING -> not show
              
                
              
              
              
              
.row{:"data-no-turbolink" => true}
  .col-lg-12
    .question-box{:id => "question_#{@question.id}"}
      .panel.panel-primary
        .panel-heading
          %h3.panel-title Frage
        .panel-body.scale-images
          =preview_html_field(@question.text)
      - @question.answers.each_with_index do |answer, index|
        %ul.list-group
          / test_step_path(:id => @test, :question_number => @question_number+2)
          = link_to "#", :onclick => "return false;", :class=> "list-group-item no-boarder" do 
            .answer{:id => "answer-#{answer.id}"}
              .answer-badge-q3
                -if @assignation.answer_checked?(answer)
                  %i.fa.fa-check-square-o
                - else
                  %i.fa.fa-square-o
                / %span.glyphicon.glyphicon-unchecked{"aria-hidden" => "true"}
                =answer_char(index)
                / =index_2
            .answer-text=preview_html_field(answer.text)
            
      .row
        .col-lg-12
          - if @assignation_number > 0
            %a.btn.btn-default.pull-left{:href => test_step_path(:id => @test, :assignation_number => @assignation_number), :role => "button"} ZurÃ¼ck
          %a.btn.btn-default.pull-right{:id => 'next-link', :href => "#", :role => "button"} Weiter
          / test_step_path(:id => @test, :question_number => @question_number+2)

-if @question.question_context.category.single_question_select?
  :javascript
    $('.list-group-item').click(function() {
      var checkbox = $(this).find('i.fa');
      
      //uncheck all previous checked answers
      $(".fa-check-square-o").each(function( index ) {
        $(this).removeClass('fa-check-square-o');
        $(this).addClass('fa-square-o');
      });
      
      //check the clicked one
      if(checkbox.hasClass('fa-square-o')) {
        checkbox.removeClass('fa-square-o');
        checkbox.addClass('fa-check-square-o');
      } else {
        checkbox.addClass('fa-square-o');
        checkbox.removeClass('fa-check-square-o');
      }
      
      return false;
    });
    

    
    function getCheckedAnswersParam() {
      var checked_answer_ids= new Array();
      console.info('looking for selected');
      $(".fa-check-square-o").each(function( index ) {
        console.info( "found" );
        var id = $(this).closest('.answer').attr('id');
        checked_answer_ids.push(id);
      });
      
      var checked_answer_param = "";
      jQuery.each(checked_answer_ids, function(index, checked_answer) {
        checked_answer_param += "ca%5B%5D="+checked_answer.replace('answer-','')+"&";
      });
      
      console.info(checked_answer_ids);
      
      return checked_answer_param;
    }
    
    $('a#next-link').on('click', function() {
      var checked_answer_param = getCheckedAnswersParam();
      console.info(checked_answer_param)
      this.href = "/tests/"+"#{@test.id}"+"/step/"+"#{@assignation_number+2}?"+checked_answer_param;
    });
- else
  :javascript
    $('.list-group-item').click(function() {
      var checkbox = $(this).find('i.fa');
      
      if(checkbox.hasClass('fa-square-o')) {
        checkbox.removeClass('fa-square-o');
        checkbox.addClass('fa-check-square-o');
      } else {
        checkbox.addClass('fa-square-o');
        checkbox.removeClass('fa-check-square-o');
      }
      
      return false;
    });
    
    
    
    
    function getCheckedAnswersParam() {
      var checked_answer_ids= new Array();
      console.info('looking for selected');
      $(".fa-check-square-o").each(function( index ) {
        console.info( "found" );
        var id = $(this).closest('.answer').attr('id');
        checked_answer_ids.push(id);
      });
      
      var checked_answer_param = "";
      jQuery.each(checked_answer_ids, function(index, checked_answer) {
        checked_answer_param += "ca%5B%5D="+checked_answer.replace('answer-','')+"&";
      });
      
      console.info(checked_answer_ids);
      
      return checked_answer_param;
    }
    
    $('a#next-link').on('click', function() {
      var checked_answer_param = getCheckedAnswersParam();
      console.info(checked_answer_param)
      this.href = "/tests/"+"#{@test.id}"+"/step/"+"#{@assignation_number+2}?"+checked_answer_param;
    });

